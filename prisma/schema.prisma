// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique //for kinde, dont need default
  email     String   @unique

  File File[]
  Message Message[]

  CustomerId String? @unique @map(name: "customer_id")
  SubscriptionId String? @unique @map(name: "subscription_id")
  PriceId String? @unique @map(name: "price_id")
  CurrentPeriodEnd DateTime? @map(name: "current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}

model File{
  id        String   @id @default(cuid()) @unique
  name     String
  
  uploadStatus UploadStatus @default(PENDING)
  url      String
  key      String
  message Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User? @relation(fields: [userId], references: [id])
  userId String?
}

model Message {
  id       String   @id @default(cuid()) @unique
  text    String @db.Text()
  isUserMessage Boolean 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User User? @relation(fields: [userId], references: [id])
  userId String?
  File File? @relation(fields: [fileId], references: [id])
  fileId String?
}